name: 'Actions Composite Template'
description: 'Greet someone'
branding:
  icon: "check-circle"
  color: "green"
inputs:
  ProjectOwner:
    description: 'Project Owner'
    required: true
    # default: ${{ vars.DUE_OWNER }}
  ProjectNumber:
    description: 'Project Number'
    required: true
    # default: ${{ vars.DUE_PROJECT_NUMBER }}
  DueDateFieldName:
    description: 'Field Name for Due Date'
    required: true
    # default: ${{ vars.DUE_FIELD_NAME }}
  Status:
    description: 'Status to update'
    required: true
    # default: ${{ vars.DUE_STATUS }}
  TOKEN:
    description: 'GitHub Token'
    required: true
    # default: ${{ secrets.GH_PAT }}
outputs:
  updated-count:
    description: "Number of items that have been updated"
    value: ${{steps.update-run.outputs.updated-count}}
runs:
  using: "composite"
  steps:
    - id: update-run
      env:
        GH_TOKEN: ${{ inputs.TOKEN }}
      shell: pwsh
      run: |

        #Load Module
        Import-Module -Name ProjectHelper

        # Overdue Project Items

        $param = @{
          Owner = "${{ inputs.ProjectOwner }}"
          ProjectNumber = "${{ inputs.ProjectNumber}}"
          DueDateFieldName = "${{ inputs.DueDateFieldName }}"
          Status = "${{ inputs.Status }}"
        }
        
        "Calling Update-ProjectItemsStatusOnDueDate with parameter:" | write-host
        $param | write-host

        update-ProjectItemsStatusOnDueDate @param

        # Read staged items
        $staged = Show-ProjectItemStaged

        # Output the changes to the console
        $staged | ForEach-Object { "`nItem: $($_.id) - $($_.Title)`n"; Show-ProjectItemStaged -Id $_.id | ConvertTo-Json -Depth 5 | Out-String }

        # Sync staged items to project
        Sync-ProjectItemStaged

        # Set output value
        echo "updated-count=$($staged.Count)" >> $GITHUB_OUTPUT

